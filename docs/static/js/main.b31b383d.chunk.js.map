{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","onClick","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","console","log","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,6BAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACE,sBAAMC,SAba,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAShB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAlBhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAiB8CG,QAN/C,SAACT,GACvBF,EAAc,U,+BClBLY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEqBC,UAAUH,GAF/B,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAChB,YAOE,MAAO,CACLC,GAFE,EALJA,GAQEC,MAHE,EAJJA,MAQET,IAJE,EAHJU,OACEC,iBAAoBX,QAXP,kBAsBZM,GAtBY,4CAAH,sDCCPM,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACvC,OAEI,sBAAKa,UAAU,6CAAf,UACE,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCFCO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAE1B,ECH4B,SAACA,GAE7B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNvB,EAAQC,GAAUuB,MAAK,SAAAC,GAAI,OAGtBH,EAAS,CACNd,KAAMiB,EACNL,SAAQ,SAIb,CAACnB,IAEDoB,EDhBwBK,CAAczB,GAAjCY,EAAZ,EAAOL,KAAaY,EAApB,EAAoBA,QAGlB,OADFO,QAAQC,IAAIf,GAER,qCACE,qBAAIG,UAAW,oCAAf,cAAqDf,KACnDmB,GAAW,mBAAGJ,UAAW,mEAAd,qBACb,qBAAKA,UAAU,WAAf,SACGH,EAAOH,KAAI,SAACmB,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIlB,aESjBmB,EArBM,WACnB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAIA,OACE,qCACE,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG8C,EAAWrB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCZxB+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.b31b383d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"¿Qué deseas buscar?\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const emptyInputValue = (e) => {\r\n    setInputValue(\"\")\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} onClick = {emptyInputValue}/>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url =\r\n  `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=eXCn5wlrd5WTpDulATEk7H20u4iCJnZR`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(\r\n      ({\r\n        id,\r\n        title,\r\n        images: {\r\n          downsized_medium: { url },\r\n        },\r\n      }) => {\r\n        return {\r\n          id,\r\n          title,\r\n          url,\r\n        };\r\n      }\r\n    );\r\n    \r\n    return gifs;\r\n  };","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    \r\n      <div className=\"card animate__animated animate__backInLeft\">\r\n        <img src={url} alt={title} />\r\n        <p>{title}</p>\r\n      </div>\r\n    \r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\nconst {data:images, loading} = useFetchGifs (category);\r\n\r\nconsole.log(images)\r\n  return (\r\n    <>\r\n      <h3 className= 'animate__animated animate__fadeIn'> {category}</h3>\r\n       {loading && <p className= 'animate__animated animate__flash animate__repeat-3 animate__slow'>Loading</p>}\r\n      <div className=\"gif-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\nconst [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n});\r\n\r\nuseEffect(() => {\r\n    getGifs(category).then(imgs=>\r\n               \r\n        \r\n         setstate({\r\n            data: imgs,\r\n            loading:false,\r\n        })\r\n           \r\n\r\n   )}, [category])\r\n\r\nreturn state\r\n    \r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  //const handleAdd = () => setCategories([...categories, \"The Walking Dead\"])\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}